Linux assignment questions


2)move files from one folder to the respective folders
#! /bin/bash

for f in `ls *.txt`
do
        echo $f;
done

for f in `ls *.txt`
do
        foldername=`echo $f | awk -F. '{print $1}'`;
        ext=`echo $f | awk -F. '{print $2}'`;
        mkdir $foldername;
        mv $f $foldername;
        echo "file $f moved to folder $foldername/$f";
done

output:
musthafa@DESKTOP-TLEMOD6:~/temperory$ touch abc.txt def.txt ghi.txt
musthafa@DESKTOP-TLEMOD6:~/temperory$ ls
abc.txt  def.txt  ghi.txt  pp2.sh
musthafa@DESKTOP-TLEMOD6:~/temperory$ ./pp2.sh
abc.txt
def.txt
ghi.txt
file abc.txt moved to folder abc/abc.txt
file def.txt moved to folder def/def.txt
file ghi.txt moved to folder ghi/ghi.txt
musthafa@DESKTOP-TLEMOD6:~/temperory$ ls
abc  def  ghi  pp2.sh

3) Append current date to all log files name which has extension .log.1 from a folder
musthafa@DESKTOP-TLEMOD6:~/append$ touch abc.log.1 def.log.1 ghi.log.1 xyz.log.1

#!/bin/bash

echo "List of files to be renamed:";
for file in `ls *.log.1`
do
        echo "$file";
done
for file in `ls *.log.1`
do
        echo "Renaming file $file";
        base=`echo $file | awk -F. '{print $1}'`;
        ext=`echo $file | awk -F. '{print $2}'`;
        echo $date;
        date=`date +%d%m%Y`;
        result=`echo $base-$date.$ext`;
        mv $file $result;
        echo "$file renamed to $result";
done

output:
musthafa@DESKTOP-TLEMOD6:~/append$ ./append.sh
List of files to be renamed:
abc.log.1
def.log.1
ghi.log.1
xyz.log.1
Renaming file abc.log.1

abc.log.1 renamed to abc-17082021.log
Renaming file def.log.1
17082021
def.log.1 renamed to def-17082021.log
Renaming file ghi.log.1
17082021
ghi.log.1 renamed to ghi-17082021.log
Renaming file xyz.log.1
17082021
xyz.log.1 renamed to xyz-17082021.log

4)Archive the files from /var/log folder which have modified 7 days ago and move it to your backup folder
#!/bin/bash
p=~/backup;
mkdir $p;
for file in `find /var/log -mtime +7`
do
	echo "Moving file $file to $p;
	sudo mv $file $p;
done

output:
musthafa@DESKTOP-TLEMOD6:~/backup$ ls
btmp  dist-upgrade  journal  landscape  lxd  unattended-upgrades  wtmp

5)Print last 4 frequently access urls count in sorted order from access.log

#!/bin/bash

cat access.log | awk '{count[$7]++} END {for(i in count) print count[i], i}' | sort -nr | uniq | head -4;

output:
musthafa@DESKTOP-TLEMOD6:~$ ./freq.sh
199 /vendor.js
199 /scripts.js
199 /runtime.js
199 /favicon.ico

6) Print last 4 frequently access unique urls at particular hours from access.log
#!/bin/bash

cat access.log | awk '{print $4, $7}' | cut -c 14-15,22- | awk '$1 == 12 {count[$2]++} END {for(i in count) print count[i], i}' | sort -nr | uniq | head -4;

output:

musthafa@DESKTOP-TLEMOD6:~$ ./time.sh
62 /login
60 /favicon.ico
58 /vendor.js
58 /styles.js

7) Print list of web response code count in the unique sorted order at specific hours

#!/bin/bash

cat access.log | awk '{print $4, $9}' | cut -c 14-15,22- | awk '$1 == 12 {count[$2]++} END {for(i in count) print count[i], i}' | sort -nr | uniq | head -4

output:

musthafa@DESKTOP-TLEMOD6:~$ ./scode.sh
894 200
18 304
4 206

8) Print list of last 10 unique sorted client IP from access.log

musthafa@DESKTOP-TLEMOD6:~$ cat access.log | awk '{print $1}' | sort | uniq -c | head | sort
      9 10.56.34.4
    213 10.56.10.2
    214 10.56.3.4
    242 10.56.4.2
    251 10.56.22.3
    261 10.56.0.3
    283 10.56.1.3
    323 10.56.21.2
    345 10.56.19.3
    383 10.56.2.2

9) check if a directory exists or not. If its not present, create it
#!/bin/bash

echo " Enter foldername:"
read fdname
if [ -d $fdname ]
then
        echo "Directory already exists";
else
        mkdir $fdname;
	echo "new directory created"
fi

output:

musthafa@DESKTOP-TLEMOD6:~$ ./exists.sh
Enter foldername:
temp
Directory already exists
musthafa@DESKTOP-TLEMOD6:~$ ./exists.sh
Enter foldername:
newdirectory
new directory created

10)Execute command "hello" and "ls" and check its execution status

#!/bin/bash

hello
echo "State of hello command $?";
ls
echo "State of ls command $?";

output:
musthafa@DESKTOP-TLEMOD6:~$ ./estatus.sh
Hello, world!
State of hello command 0
access.log   append   backup    estatus.sh  first.class  first.txt  newdirectory  scode.sh  temperory  time.sh
analysis.sh  arch.sh  data.csv  exists.sh   first.java   freq.sh    p12.sh        temp      test.sh
State of ls command 0

11) Set environment usersecret="dH34xJaa23" if its already not set

#!/bin/bash

secret=`echo $usersecret`;

if [ -z $secret ]
then
	export usersecret=dH34xJaa23;
else
	echo "Environment already has an value for usersecret";
fi

12) find a word "systemd" from logs files

#!/bin/bash

for file in `ls /var/log`
do
        if [ -f /var/log/$file ]
        then
                occ=`sudo cat /var/log/$file | grep -ce systemd`;
                if [ $occ -ne 0 ]
                then
                        echo "$file $occ"
                fi
        fi
done

output:
musthafa@DESKTOP-TLEMOD6:~$ ./p12.sh
dpkg.log 8

13) Create proceslist table display process id, parent process id, common name, % of memory consumption, % of cpu utilized

musthafa@DESKTOP-TLEMOD6:~$ ps -efo pid,ppid,cmd,%mem,%cpu
  PID  PPID CMD                         %MEM %CPU
    7     6 -bash HOSTTYPE=x86_64 LANG=  0.0  0.3
   33     7  \_ ps -efo pid,ppid,cmd,%m  0.0  0.0

14) Data ananlysis/manipulation (Awk)

#!/bin/bash

echo "EmployeeNmae and total pay with basepay > 10000"
cat data.csv | awk '$4>10000 {print $2" "$7}'
echo
echo "total pay of captains"
cat data.csv | awk '$3~/CAPTAIN/ {SUM+=$7} END{print SUM}'
echo
echo "Job_Title Overtime_Pay"
cat data.csv | awk '$5 > 7000 && $5 < 10000 {print $3" "$5}'
echo
cat data.csv | awk '{sum+=$4} END {print sum/NR}'

output:
musthafa@DESKTOP-TLEMOD6:~$ ./analysis.sh
EmployeeNmae and total pay with basepay > 10000
EmployeeName TotalPay
NATHANIEL 567595
GARY 538909
ALBERT 335279
CHRISTOPHER 332343
PATRICK 326373
DAVID 316285
ALSON 315981
DAVID 307899
JOANNE 302377
PATRICIA 297608
EDWARD 294580

total pay of captains
1171796

Job_Title Overtime_Pay
DEPUTYCHIEF 9737
ASSTDEPUTY 8601

145821
 

